# Generated by Django 5.0 on 2024-01-14 07:07

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='VehicleBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VehicleColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VehicleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VehicleType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VehicleData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plate_number', models.CharField(max_length=100, verbose_name='Plate Number')),
                ('address', models.CharField(default='A', max_length=100, verbose_name='City')),
                ('libre', models.FileField(blank=True, help_text='Accepted formats: png, jpg, jpeg, pdf. Max file size 10 MB', upload_to='vehicle/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg', 'pdf'])], verbose_name='Libre')),
                ('license', models.FileField(blank=True, help_text='Accepted formats: png, jpg, jpeg, pdf. Max file size 10 MB', upload_to='vehicle/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg', 'pdf'])], verbose_name='License')),
                ('transmission', models.CharField(choices=[('', 'Select Transmission'), ('Manual', 'Manual'), ('Automatic', 'Automatic')], max_length=50)),
                ('fuel_type', models.CharField(blank=True, choices=[('', 'Select Fuel Type'), ('Diseasel / Nafta', 'Diseasel / Nafta'), ('Benzine / Benzil', 'Benzine / Benzil')], max_length=50, null=True)),
                ('driver_status', models.CharField(choices=[('', 'Select Driver Status'), ('With Driver', 'With Driver'), ('With Out Driver', 'With Out Driver')], max_length=100)),
                ('production_year', models.IntegerField(validators=[django.core.validators.MaxValueValidator(2024, message='Production year cannot be in the future.')], verbose_name='Production Year')),
                ('price_per_day', models.DecimalField(decimal_places=2, default=0.0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Price Per Day')),
                ('is_active', models.BooleanField(default=True)),
                ('is_ontrip', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_available', models.BooleanField(default=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle', to=settings.AUTH_USER_MODEL)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehiclebrand', to='vehicle.vehiclebrand', verbose_name='Vehicle Make')),
                ('color', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicle.vehiclecolor', verbose_name='Color')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicle.vehiclemodel', verbose_name='Model')),
                ('vehicle_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='vehicle.vehicletype', verbose_name='Vehicle Type')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VehicleImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Accepted formats: png, jpg, jpeg. Max file size 10 MB', upload_to='Vehicle Image', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['png', 'jpg', 'jpeg'])], verbose_name='Vehicle Images')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='vehicle.vehicledata')),
            ],
        ),
    ]
